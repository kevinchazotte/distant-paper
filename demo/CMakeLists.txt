cmake_minimum_required(VERSION 3.24)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}")
set(PROJECT_BUILD_DIR "${CMAKE_CURRENT_SOURCE_DIR}/build/")
set(BUILD_SHARED_LIBS OFF)
set(CMAKE_MSVC_STATIC_RUNTIME ON)

include("${CMAKE_CURRENT_SOURCE_DIR}/projects.cmake")

include(ExternalProject)
set(DOWNLOAD_DIR "$ENV{USERPROFILE}/Downloads")
set(SOURCE_DIR "${PROJECT_BUILD_DIR}/src/abseil-cpp/")
if(NOT TARGET download-abseil-cpp)
  ExternalProject_Add(download-abseil-cpp
    DOWNLOAD_DIR ${DOWNLOAD_DIR}
    URL ${abseil-cpp_url}
    URL_MD5 ${abseil-cpp_md5}
    SOURCE_DIR ${SOURCE_DIR}
    CONFIGURE_COMMAND ""
    BUILD_COMMAND ""
    INSTALL_COMMAND ""
  )
endif()
foreach(build_type Release;RelWithDebInfo;Debug)
	set(CMAKE_BUILD_TYPE ${build_type})
	set(INSTALL_DIR "${PROJECT_BUILD_DIR}/x64/${CMAKE_BUILD_TYPE}/")
	set(BINARY_DIR "${PROJECT_BUILD_DIR}/bld/x64/${CMAKE_BUILD_TYPE}/abseil-cpp/")
	ExternalProject_Add(
		absl${CMAKE_BUILD_TYPE}
		DOWNLOAD_COMMAND ""
		DOWNLOAD_EXTRACT_TIMESTAMP FALSE
		SOURCE_DIR ${SOURCE_DIR}
		BINARY_DIR ${BINARY_DIR}
		INSTALL_DIR ${INSTALL_DIR}
		CMAKE_ARGS
			-DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
			-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
			-DCMAKE_CXX_STANDARD=17
			-DCMAKE_POSITION_INDEPENDENT_CODE=ON
			-DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS}
			-DABSL_BUILD_TESTING=OFF
			-DABSL_USE_GOOGLETEST_HEAD=OFF
			-DABSL_MSVC_STATIC_RUNTIME:BOOL=${CMAKE_MSVC_STATIC_RUNTIME}
			-DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded$<$<CONFIG:Debug>:Debug>
		UPDATE_COMMAND ""
		DEPENDS download-abseil-cpp
	)
endforeach()

set(SOURCE_DIR "${PROJECT_BUILD_DIR}/src/protobuf/")
if(NOT TARGET download-protobuf)
  ExternalProject_Add(download-protobuf
    DOWNLOAD_DIR ${DOWNLOAD_DIR}
    URL ${protobuf_url}
    URL_MD5 ${protobuf_md5}
    SOURCE_DIR ${SOURCE_DIR}
    CONFIGURE_COMMAND ""
    BUILD_COMMAND ""
    INSTALL_COMMAND ""
  )
endif()
foreach(build_type Release;RelWithDebInfo;Debug)
	set(CMAKE_BUILD_TYPE ${build_type})
	set(INSTALL_DIR "${PROJECT_BUILD_DIR}/x64/${CMAKE_BUILD_TYPE}/")
	set(BINARY_DIR "${PROJECT_BUILD_DIR}/bld/x64/${CMAKE_BUILD_TYPE}/protobuf/")
	ExternalProject_Add(
		protobuf${CMAKE_BUILD_TYPE}
		DOWNLOAD_COMMAND ""
		DOWNLOAD_EXTRACT_TIMESTAMP FALSE
		SOURCE_DIR ${SOURCE_DIR}
		BINARY_DIR ${BINARY_DIR}
		INSTALL_DIR ${INSTALL_DIR}
		CMAKE_ARGS
			-DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
			-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
			-DCMAKE_CXX_STANDARD=17
			-DCMAKE_POSITION_INDEPENDENT_CODE=ON
			-Dprotobuf_BUILD_TESTS=OFF
			-Dprotobuf_BUILD_SHARED_LIBS=${BUILD_SHARED_LIBS}
			-DCMAKE_PREFIX_PATH="${PROJECT_BUILD_DIR}/x64/${CMAKE_BUILD_TYPE}/"
			-DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded$<$<CONFIG:Debug>:Debug>
		DEPENDS download-protobuf absl${CMAKE_BUILD_TYPE}
		UPDATE_COMMAND    ""
	)
endforeach()


set(GRPC_GIT_SUBMODULES "third_party/protobuf" "third_party/abseil-cpp") # Let gRPC use our versions
set(SOURCE_DIR "${PROJECT_BUILD_DIR}/src/grpc/")
if(NOT TARGET download-grpc)
  ExternalProject_Add(download-grpc
    DOWNLOAD_DIR ${DOWNLOAD_DIR}
    URL ${grpc_url}
    URL_MD5 ${grpc_md5}
    SOURCE_DIR ${SOURCE_DIR}
    CONFIGURE_COMMAND ""
    BUILD_COMMAND ""
    INSTALL_COMMAND ""
  )
endif()
foreach(build_type Release;RelWithDebInfo;Debug)
	set(CMAKE_BUILD_TYPE ${build_type})
	set(INSTALL_DIR "${PROJECT_BUILD_DIR}/x64/${CMAKE_BUILD_TYPE}/")
	set(BINARY_DIR "${PROJECT_BUILD_DIR}/bld/x64/${CMAKE_BUILD_TYPE}/grpc/")
	ExternalProject_Add(
		grpc${CMAKE_BUILD_TYPE}
		DOWNLOAD_COMMAND ""
		DOWNLOAD_EXTRACT_TIMESTAMP FALSE
		GIT_SUBMODULES
		SOURCE_DIR ${SOURCE_DIR}
		BINARY_DIR ${BINARY_DIR}
		INSTALL_DIR ${INSTALL_DIR}
		CMAKE_ARGS
			-DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
			-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
			-DCMAKE_CXX_STANDARD=17
			-DCMAKE_POSITION_INDEPENDENT_CODE=ON
			-DgRPC_INSTALL=ON
			-DgRPC_BUILD_CODEGEN=ON
			-DgRPC_BUILD_GRPC_CPP_PLUGIN=ON
			-DgRPC_BUILD_TESTS=OFF
			-DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS}
			-DgRPC_STATIC_LINKAGE=ON
			-DgRPC_ABSL_PROVIDER=package
			-DgRPC_PROTOBUF_PROVIDER=package
			-DgRPC_ZLIB_PROVIDER=module
			-DgRPC_CARES_PROVIDER=module
			-DgRPC_SSL_PROVIDER=module
			-DCMAKE_PREFIX_PATH="${PROJECT_BUILD_DIR}/x64/${CMAKE_BUILD_TYPE}/"
			-DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded$<$<CONFIG:Debug>:Debug>
		DEPENDS download-grpc absl${CMAKE_BUILD_TYPE} protobuf${CMAKE_BUILD_TYPE}
		UPDATE_COMMAND    ""
	)
endforeach()
