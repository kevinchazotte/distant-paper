// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: drawing_types.proto
// Protobuf C++ Version: 6.30.0

#ifndef drawing_5ftypes_2eproto_2epb_2eh
#define drawing_5ftypes_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_drawing_5ftypes_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_drawing_5ftypes_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_drawing_5ftypes_2eproto;
}  // extern "C"
namespace Whiteboard {
class Line;
struct LineDefaultTypeInternal;
extern LineDefaultTypeInternal _Line_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Line_class_data_;
class Point;
struct PointDefaultTypeInternal;
extern PointDefaultTypeInternal _Point_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Point_class_data_;
class Rectangle;
struct RectangleDefaultTypeInternal;
extern RectangleDefaultTypeInternal _Rectangle_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Rectangle_class_data_;
}  // namespace Whiteboard
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Whiteboard {

// ===================================================================


// -------------------------------------------------------------------

class Point final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Whiteboard.Point) */ {
 public:
  inline Point() : Point(nullptr) {}
  ~Point() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Point* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Point));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Point(::google::protobuf::internal::ConstantInitialized);

  inline Point(const Point& from) : Point(nullptr, from) {}
  inline Point(Point&& from) noexcept
      : Point(nullptr, std::move(from)) {}
  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point& operator=(Point&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point& default_instance() {
    return *reinterpret_cast<const Point*>(
        &_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Point& a, Point& b) { a.Swap(&b); }
  inline void Swap(Point* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Point* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Point>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Point& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Point& from) { Point::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Point* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Whiteboard.Point"; }

 protected:
  explicit Point(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Point(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Point& from);
  Point(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Point&& from) noexcept
      : Point(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kColorFieldNumber = 3,
  };
  // float x = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // uint32 color = 3;
  void clear_color() ;
  ::uint32_t color() const;
  void set_color(::uint32_t value);

  private:
  ::uint32_t _internal_color() const;
  void _internal_set_color(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Whiteboard.Point)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Point& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float x_;
    float y_;
    ::uint32_t color_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_drawing_5ftypes_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Point_class_data_;
// -------------------------------------------------------------------

class Rectangle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Whiteboard.Rectangle) */ {
 public:
  inline Rectangle() : Rectangle(nullptr) {}
  ~Rectangle() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Rectangle* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Rectangle));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Rectangle(::google::protobuf::internal::ConstantInitialized);

  inline Rectangle(const Rectangle& from) : Rectangle(nullptr, from) {}
  inline Rectangle(Rectangle&& from) noexcept
      : Rectangle(nullptr, std::move(from)) {}
  inline Rectangle& operator=(const Rectangle& from) {
    CopyFrom(from);
    return *this;
  }
  inline Rectangle& operator=(Rectangle&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Rectangle& default_instance() {
    return *reinterpret_cast<const Rectangle*>(
        &_Rectangle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Rectangle& a, Rectangle& b) { a.Swap(&b); }
  inline void Swap(Rectangle* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Rectangle* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Rectangle* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Rectangle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Rectangle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Rectangle& from) { Rectangle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Rectangle* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Whiteboard.Rectangle"; }

 protected:
  explicit Rectangle(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Rectangle(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Rectangle& from);
  Rectangle(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Rectangle&& from) noexcept
      : Rectangle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 3,
    kStartFieldNumber = 1,
    kEndFieldNumber = 2,
  };
  // string id = 3;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // .Whiteboard.Point start = 1;
  bool has_start() const;
  void clear_start() ;
  const ::Whiteboard::Point& start() const;
  [[nodiscard]] ::Whiteboard::Point* PROTOBUF_NULLABLE release_start();
  ::Whiteboard::Point* PROTOBUF_NONNULL mutable_start();
  void set_allocated_start(::Whiteboard::Point* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_start(::Whiteboard::Point* PROTOBUF_NULLABLE value);
  ::Whiteboard::Point* PROTOBUF_NULLABLE unsafe_arena_release_start();

  private:
  const ::Whiteboard::Point& _internal_start() const;
  ::Whiteboard::Point* PROTOBUF_NONNULL _internal_mutable_start();

  public:
  // .Whiteboard.Point end = 2;
  bool has_end() const;
  void clear_end() ;
  const ::Whiteboard::Point& end() const;
  [[nodiscard]] ::Whiteboard::Point* PROTOBUF_NULLABLE release_end();
  ::Whiteboard::Point* PROTOBUF_NONNULL mutable_end();
  void set_allocated_end(::Whiteboard::Point* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_end(::Whiteboard::Point* PROTOBUF_NULLABLE value);
  ::Whiteboard::Point* PROTOBUF_NULLABLE unsafe_arena_release_end();

  private:
  const ::Whiteboard::Point& _internal_end() const;
  ::Whiteboard::Point* PROTOBUF_NONNULL _internal_mutable_end();

  public:
  // @@protoc_insertion_point(class_scope:Whiteboard.Rectangle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 31,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Rectangle& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::Whiteboard::Point* PROTOBUF_NULLABLE start_;
    ::Whiteboard::Point* PROTOBUF_NULLABLE end_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_drawing_5ftypes_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Rectangle_class_data_;
// -------------------------------------------------------------------

class Line final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Whiteboard.Line) */ {
 public:
  inline Line() : Line(nullptr) {}
  ~Line() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Line* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Line));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Line(::google::protobuf::internal::ConstantInitialized);

  inline Line(const Line& from) : Line(nullptr, from) {}
  inline Line(Line&& from) noexcept
      : Line(nullptr, std::move(from)) {}
  inline Line& operator=(const Line& from) {
    CopyFrom(from);
    return *this;
  }
  inline Line& operator=(Line&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Line& default_instance() {
    return *reinterpret_cast<const Line*>(
        &_Line_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Line& a, Line& b) { a.Swap(&b); }
  inline void Swap(Line* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Line* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Line* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Line>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Line& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Line& from) { Line::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Line* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Whiteboard.Line"; }

 protected:
  explicit Line(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Line(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Line& from);
  Line(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Line&& from) noexcept
      : Line(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 3,
    kStartFieldNumber = 1,
    kEndFieldNumber = 2,
  };
  // string id = 3;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // .Whiteboard.Point start = 1;
  bool has_start() const;
  void clear_start() ;
  const ::Whiteboard::Point& start() const;
  [[nodiscard]] ::Whiteboard::Point* PROTOBUF_NULLABLE release_start();
  ::Whiteboard::Point* PROTOBUF_NONNULL mutable_start();
  void set_allocated_start(::Whiteboard::Point* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_start(::Whiteboard::Point* PROTOBUF_NULLABLE value);
  ::Whiteboard::Point* PROTOBUF_NULLABLE unsafe_arena_release_start();

  private:
  const ::Whiteboard::Point& _internal_start() const;
  ::Whiteboard::Point* PROTOBUF_NONNULL _internal_mutable_start();

  public:
  // .Whiteboard.Point end = 2;
  bool has_end() const;
  void clear_end() ;
  const ::Whiteboard::Point& end() const;
  [[nodiscard]] ::Whiteboard::Point* PROTOBUF_NULLABLE release_end();
  ::Whiteboard::Point* PROTOBUF_NONNULL mutable_end();
  void set_allocated_end(::Whiteboard::Point* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_end(::Whiteboard::Point* PROTOBUF_NULLABLE value);
  ::Whiteboard::Point* PROTOBUF_NULLABLE unsafe_arena_release_end();

  private:
  const ::Whiteboard::Point& _internal_end() const;
  ::Whiteboard::Point* PROTOBUF_NONNULL _internal_mutable_end();

  public:
  // @@protoc_insertion_point(class_scope:Whiteboard.Line)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 26,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Line& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::Whiteboard::Point* PROTOBUF_NULLABLE start_;
    ::Whiteboard::Point* PROTOBUF_NULLABLE end_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_drawing_5ftypes_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Line_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Point

// float x = 1;
inline void Point::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float Point::x() const {
  // @@protoc_insertion_point(field_get:Whiteboard.Point.x)
  return _internal_x();
}
inline void Point::set_x(float value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:Whiteboard.Point.x)
}
inline float Point::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Point::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 2;
inline void Point::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float Point::y() const {
  // @@protoc_insertion_point(field_get:Whiteboard.Point.y)
  return _internal_y();
}
inline void Point::set_y(float value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:Whiteboard.Point.y)
}
inline float Point::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Point::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// uint32 color = 3;
inline void Point::clear_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t Point::color() const {
  // @@protoc_insertion_point(field_get:Whiteboard.Point.color)
  return _internal_color();
}
inline void Point::set_color(::uint32_t value) {
  _internal_set_color(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:Whiteboard.Point.color)
}
inline ::uint32_t Point::_internal_color() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.color_;
}
inline void Point::_internal_set_color(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_ = value;
}

// -------------------------------------------------------------------

// Line

// .Whiteboard.Point start = 1;
inline bool Line::has_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.start_ != nullptr);
  return value;
}
inline void Line::clear_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_ != nullptr) _impl_.start_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::Whiteboard::Point& Line::_internal_start() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Whiteboard::Point* p = _impl_.start_;
  return p != nullptr ? *p : reinterpret_cast<const ::Whiteboard::Point&>(::Whiteboard::_Point_default_instance_);
}
inline const ::Whiteboard::Point& Line::start() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Whiteboard.Line.start)
  return _internal_start();
}
inline void Line::unsafe_arena_set_allocated_start(
    ::Whiteboard::Point* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_);
  }
  _impl_.start_ = reinterpret_cast<::Whiteboard::Point*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Whiteboard.Line.start)
}
inline ::Whiteboard::Point* PROTOBUF_NULLABLE Line::release_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Whiteboard::Point* released = _impl_.start_;
  _impl_.start_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Whiteboard::Point* PROTOBUF_NULLABLE Line::unsafe_arena_release_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Whiteboard.Line.start)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Whiteboard::Point* temp = _impl_.start_;
  _impl_.start_ = nullptr;
  return temp;
}
inline ::Whiteboard::Point* PROTOBUF_NONNULL Line::_internal_mutable_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Whiteboard::Point>(GetArena());
    _impl_.start_ = reinterpret_cast<::Whiteboard::Point*>(p);
  }
  return _impl_.start_;
}
inline ::Whiteboard::Point* PROTOBUF_NONNULL Line::mutable_start()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::Whiteboard::Point* _msg = _internal_mutable_start();
  // @@protoc_insertion_point(field_mutable:Whiteboard.Line.start)
  return _msg;
}
inline void Line::set_allocated_start(::Whiteboard::Point* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.start_ = reinterpret_cast<::Whiteboard::Point*>(value);
  // @@protoc_insertion_point(field_set_allocated:Whiteboard.Line.start)
}

// .Whiteboard.Point end = 2;
inline bool Line::has_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.end_ != nullptr);
  return value;
}
inline void Line::clear_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_ != nullptr) _impl_.end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::Whiteboard::Point& Line::_internal_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Whiteboard::Point* p = _impl_.end_;
  return p != nullptr ? *p : reinterpret_cast<const ::Whiteboard::Point&>(::Whiteboard::_Point_default_instance_);
}
inline const ::Whiteboard::Point& Line::end() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Whiteboard.Line.end)
  return _internal_end();
}
inline void Line::unsafe_arena_set_allocated_end(
    ::Whiteboard::Point* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_);
  }
  _impl_.end_ = reinterpret_cast<::Whiteboard::Point*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Whiteboard.Line.end)
}
inline ::Whiteboard::Point* PROTOBUF_NULLABLE Line::release_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Whiteboard::Point* released = _impl_.end_;
  _impl_.end_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Whiteboard::Point* PROTOBUF_NULLABLE Line::unsafe_arena_release_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Whiteboard.Line.end)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Whiteboard::Point* temp = _impl_.end_;
  _impl_.end_ = nullptr;
  return temp;
}
inline ::Whiteboard::Point* PROTOBUF_NONNULL Line::_internal_mutable_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Whiteboard::Point>(GetArena());
    _impl_.end_ = reinterpret_cast<::Whiteboard::Point*>(p);
  }
  return _impl_.end_;
}
inline ::Whiteboard::Point* PROTOBUF_NONNULL Line::mutable_end()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::Whiteboard::Point* _msg = _internal_mutable_end();
  // @@protoc_insertion_point(field_mutable:Whiteboard.Line.end)
  return _msg;
}
inline void Line::set_allocated_end(::Whiteboard::Point* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.end_ = reinterpret_cast<::Whiteboard::Point*>(value);
  // @@protoc_insertion_point(field_set_allocated:Whiteboard.Line.end)
}

// string id = 3;
inline void Line::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Line::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Whiteboard.Line.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Line::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Whiteboard.Line.id)
}
inline std::string* PROTOBUF_NONNULL Line::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:Whiteboard.Line.id)
  return _s;
}
inline const std::string& Line::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Line::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Line::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Line::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Whiteboard.Line.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void Line::set_allocated_id(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Whiteboard.Line.id)
}

// -------------------------------------------------------------------

// Rectangle

// .Whiteboard.Point start = 1;
inline bool Rectangle::has_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.start_ != nullptr);
  return value;
}
inline void Rectangle::clear_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_ != nullptr) _impl_.start_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::Whiteboard::Point& Rectangle::_internal_start() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Whiteboard::Point* p = _impl_.start_;
  return p != nullptr ? *p : reinterpret_cast<const ::Whiteboard::Point&>(::Whiteboard::_Point_default_instance_);
}
inline const ::Whiteboard::Point& Rectangle::start() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Whiteboard.Rectangle.start)
  return _internal_start();
}
inline void Rectangle::unsafe_arena_set_allocated_start(
    ::Whiteboard::Point* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_);
  }
  _impl_.start_ = reinterpret_cast<::Whiteboard::Point*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Whiteboard.Rectangle.start)
}
inline ::Whiteboard::Point* PROTOBUF_NULLABLE Rectangle::release_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Whiteboard::Point* released = _impl_.start_;
  _impl_.start_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Whiteboard::Point* PROTOBUF_NULLABLE Rectangle::unsafe_arena_release_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Whiteboard.Rectangle.start)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Whiteboard::Point* temp = _impl_.start_;
  _impl_.start_ = nullptr;
  return temp;
}
inline ::Whiteboard::Point* PROTOBUF_NONNULL Rectangle::_internal_mutable_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Whiteboard::Point>(GetArena());
    _impl_.start_ = reinterpret_cast<::Whiteboard::Point*>(p);
  }
  return _impl_.start_;
}
inline ::Whiteboard::Point* PROTOBUF_NONNULL Rectangle::mutable_start()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::Whiteboard::Point* _msg = _internal_mutable_start();
  // @@protoc_insertion_point(field_mutable:Whiteboard.Rectangle.start)
  return _msg;
}
inline void Rectangle::set_allocated_start(::Whiteboard::Point* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.start_ = reinterpret_cast<::Whiteboard::Point*>(value);
  // @@protoc_insertion_point(field_set_allocated:Whiteboard.Rectangle.start)
}

// .Whiteboard.Point end = 2;
inline bool Rectangle::has_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.end_ != nullptr);
  return value;
}
inline void Rectangle::clear_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_ != nullptr) _impl_.end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::Whiteboard::Point& Rectangle::_internal_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Whiteboard::Point* p = _impl_.end_;
  return p != nullptr ? *p : reinterpret_cast<const ::Whiteboard::Point&>(::Whiteboard::_Point_default_instance_);
}
inline const ::Whiteboard::Point& Rectangle::end() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Whiteboard.Rectangle.end)
  return _internal_end();
}
inline void Rectangle::unsafe_arena_set_allocated_end(
    ::Whiteboard::Point* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_);
  }
  _impl_.end_ = reinterpret_cast<::Whiteboard::Point*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Whiteboard.Rectangle.end)
}
inline ::Whiteboard::Point* PROTOBUF_NULLABLE Rectangle::release_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Whiteboard::Point* released = _impl_.end_;
  _impl_.end_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Whiteboard::Point* PROTOBUF_NULLABLE Rectangle::unsafe_arena_release_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Whiteboard.Rectangle.end)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Whiteboard::Point* temp = _impl_.end_;
  _impl_.end_ = nullptr;
  return temp;
}
inline ::Whiteboard::Point* PROTOBUF_NONNULL Rectangle::_internal_mutable_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Whiteboard::Point>(GetArena());
    _impl_.end_ = reinterpret_cast<::Whiteboard::Point*>(p);
  }
  return _impl_.end_;
}
inline ::Whiteboard::Point* PROTOBUF_NONNULL Rectangle::mutable_end()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::Whiteboard::Point* _msg = _internal_mutable_end();
  // @@protoc_insertion_point(field_mutable:Whiteboard.Rectangle.end)
  return _msg;
}
inline void Rectangle::set_allocated_end(::Whiteboard::Point* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.end_ = reinterpret_cast<::Whiteboard::Point*>(value);
  // @@protoc_insertion_point(field_set_allocated:Whiteboard.Rectangle.end)
}

// string id = 3;
inline void Rectangle::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Rectangle::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Whiteboard.Rectangle.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Rectangle::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Whiteboard.Rectangle.id)
}
inline std::string* PROTOBUF_NONNULL Rectangle::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:Whiteboard.Rectangle.id)
  return _s;
}
inline const std::string& Rectangle::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Rectangle::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Rectangle::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Rectangle::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Whiteboard.Rectangle.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void Rectangle::set_allocated_id(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Whiteboard.Rectangle.id)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Whiteboard


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // drawing_5ftypes_2eproto_2epb_2eh
