// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: drawing_service.proto
// Protobuf C++ Version: 6.30.0

#include "drawing_service.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Whiteboard {
namespace Drawing {

inline constexpr EraseEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        drawable_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR EraseEvent::EraseEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EraseEvent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EraseEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EraseEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EraseEventDefaultTypeInternal() {}
  union {
    EraseEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EraseEventDefaultTypeInternal _EraseEvent_default_instance_;

inline constexpr DrawingEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        drawable_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DrawingEvent::DrawingEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DrawingEvent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DrawingEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DrawingEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DrawingEventDefaultTypeInternal() {}
  union {
    DrawingEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DrawingEventDefaultTypeInternal _DrawingEvent_default_instance_;

inline constexpr StreamEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        connectionid_{0},
        EventType_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR StreamEvent::StreamEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StreamEvent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreamEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamEventDefaultTypeInternal() {}
  union {
    StreamEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamEventDefaultTypeInternal _StreamEvent_default_instance_;
}  // namespace Drawing
}  // namespace Whiteboard
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_drawing_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_drawing_5fservice_2eproto = nullptr;
const ::uint32_t
    TableStruct_drawing_5fservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Whiteboard::Drawing::StreamEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Whiteboard::Drawing::StreamEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::Whiteboard::Drawing::StreamEvent, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Whiteboard::Drawing::StreamEvent, _impl_.connectionid_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::Whiteboard::Drawing::StreamEvent, _impl_.EventType_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::Whiteboard::Drawing::DrawingEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Whiteboard::Drawing::DrawingEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Whiteboard::Drawing::DrawingEvent, _impl_.drawable_),
        0,
        PROTOBUF_FIELD_OFFSET(::Whiteboard::Drawing::EraseEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Whiteboard::Drawing::EraseEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Whiteboard::Drawing::EraseEvent, _impl_.drawable_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::Whiteboard::Drawing::StreamEvent)},
        {15, 24, -1, sizeof(::Whiteboard::Drawing::DrawingEvent)},
        {25, 34, -1, sizeof(::Whiteboard::Drawing::EraseEvent)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::Whiteboard::Drawing::_StreamEvent_default_instance_._instance,
    &::Whiteboard::Drawing::_DrawingEvent_default_instance_._instance,
    &::Whiteboard::Drawing::_EraseEvent_default_instance_._instance,
};
const char descriptor_table_protodef_drawing_5fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025drawing_service.proto\022\022Whiteboard.Draw"
    "ing\032\023drawing_types.proto\"\240\001\n\013StreamEvent"
    "\022\024\n\014connectionId\030\001 \001(\005\0228\n\014drawingEvent\030\002"
    " \001(\0132 .Whiteboard.Drawing.DrawingEventH\000"
    "\0224\n\neraseEvent\030\003 \001(\0132\036.Whiteboard.Drawin"
    "g.EraseEventH\000B\013\n\tEventType\"<\n\014DrawingEv"
    "ent\022,\n\010drawable\030\001 \001(\0132\032.Whiteboard.Types"
    ".Drawable\":\n\nEraseEvent\022,\n\010drawable\030\001 \001("
    "\0132\032.Whiteboard.Types.Drawable2k\n\016Drawing"
    "Service\022Y\n\021OpenDrawingStream\022\037.Whiteboar"
    "d.Drawing.StreamEvent\032\037.Whiteboard.Drawi"
    "ng.StreamEvent(\0010\001b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_drawing_5fservice_2eproto_deps[1] = {
        &::descriptor_table_drawing_5ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_drawing_5fservice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_drawing_5fservice_2eproto = {
    false,
    false,
    466,
    descriptor_table_protodef_drawing_5fservice_2eproto,
    "drawing_service.proto",
    &descriptor_table_drawing_5fservice_2eproto_once,
    descriptor_table_drawing_5fservice_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_drawing_5fservice_2eproto::offsets,
    file_level_enum_descriptors_drawing_5fservice_2eproto,
    file_level_service_descriptors_drawing_5fservice_2eproto,
};
namespace Whiteboard {
namespace Drawing {
// ===================================================================

class StreamEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StreamEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StreamEvent, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::Whiteboard::Drawing::StreamEvent, _impl_._oneof_case_);
};

void StreamEvent::set_allocated_drawingevent(::Whiteboard::Drawing::DrawingEvent* PROTOBUF_NULLABLE drawingevent) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_EventType();
  if (drawingevent) {
    ::google::protobuf::Arena* submessage_arena = drawingevent->GetArena();
    if (message_arena != submessage_arena) {
      drawingevent = ::google::protobuf::internal::GetOwnedMessage(message_arena, drawingevent, submessage_arena);
    }
    set_has_drawingevent();
    _impl_.EventType_.drawingevent_ = drawingevent;
  }
  // @@protoc_insertion_point(field_set_allocated:Whiteboard.Drawing.StreamEvent.drawingEvent)
}
void StreamEvent::set_allocated_eraseevent(::Whiteboard::Drawing::EraseEvent* PROTOBUF_NULLABLE eraseevent) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_EventType();
  if (eraseevent) {
    ::google::protobuf::Arena* submessage_arena = eraseevent->GetArena();
    if (message_arena != submessage_arena) {
      eraseevent = ::google::protobuf::internal::GetOwnedMessage(message_arena, eraseevent, submessage_arena);
    }
    set_has_eraseevent();
    _impl_.EventType_.eraseevent_ = eraseevent;
  }
  // @@protoc_insertion_point(field_set_allocated:Whiteboard.Drawing.StreamEvent.eraseEvent)
}
StreamEvent::StreamEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StreamEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Whiteboard.Drawing.StreamEvent)
}
PROTOBUF_NDEBUG_INLINE StreamEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::Whiteboard::Drawing::StreamEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        EventType_{},
        _oneof_case_{from._oneof_case_[0]} {}

StreamEvent::StreamEvent(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StreamEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StreamEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StreamEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.connectionid_ = from._impl_.connectionid_;
  switch (EventType_case()) {
    case EVENTTYPE_NOT_SET:
      break;
      case kDrawingEvent:
        _impl_.EventType_.drawingevent_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.EventType_.drawingevent_);
        break;
      case kEraseEvent:
        _impl_.EventType_.eraseevent_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.EventType_.eraseevent_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:Whiteboard.Drawing.StreamEvent)
}
PROTOBUF_NDEBUG_INLINE StreamEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        EventType_{},
        _oneof_case_{} {}

inline void StreamEvent::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.connectionid_ = {};
}
StreamEvent::~StreamEvent() {
  // @@protoc_insertion_point(destructor:Whiteboard.Drawing.StreamEvent)
  SharedDtor(*this);
}
inline void StreamEvent::SharedDtor(MessageLite& self) {
  StreamEvent& this_ = static_cast<StreamEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_EventType()) {
    this_.clear_EventType();
  }
  this_._impl_.~Impl_();
}

void StreamEvent::clear_EventType() {
// @@protoc_insertion_point(one_of_clear_start:Whiteboard.Drawing.StreamEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (EventType_case()) {
    case kDrawingEvent: {
      if (GetArena() == nullptr) {
        delete _impl_.EventType_.drawingevent_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.EventType_.drawingevent_);
      }
      break;
    }
    case kEraseEvent: {
      if (GetArena() == nullptr) {
        delete _impl_.EventType_.eraseevent_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.EventType_.eraseevent_);
      }
      break;
    }
    case EVENTTYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = EVENTTYPE_NOT_SET;
}


inline void* PROTOBUF_NONNULL StreamEvent::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StreamEvent(arena);
}
constexpr auto StreamEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StreamEvent),
                                            alignof(StreamEvent));
}
constexpr auto StreamEvent::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StreamEvent_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StreamEvent::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StreamEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StreamEvent::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StreamEvent>(), &StreamEvent::ByteSizeLong,
              &StreamEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StreamEvent, _impl_._cached_size_),
          false,
      },
      &StreamEvent::kDescriptorMethods,
      &descriptor_table_drawing_5fservice_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        StreamEvent_class_data_ =
            StreamEvent::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL StreamEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StreamEvent_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StreamEvent_class_data_.tc_table);
  return StreamEvent_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 2, 0, 2>
StreamEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StreamEvent, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    StreamEvent_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Whiteboard::Drawing::StreamEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 connectionId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StreamEvent, _impl_.connectionid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(StreamEvent, _impl_.connectionid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 connectionId = 1;
    {PROTOBUF_FIELD_OFFSET(StreamEvent, _impl_.connectionid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .Whiteboard.Drawing.DrawingEvent drawingEvent = 2;
    {PROTOBUF_FIELD_OFFSET(StreamEvent, _impl_.EventType_.drawingevent_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .Whiteboard.Drawing.EraseEvent eraseEvent = 3;
    {PROTOBUF_FIELD_OFFSET(StreamEvent, _impl_.EventType_.eraseevent_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::Whiteboard::Drawing::DrawingEvent>()},
      {::_pbi::TcParser::GetTable<::Whiteboard::Drawing::EraseEvent>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void StreamEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Whiteboard.Drawing.StreamEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connectionid_ = 0;
  clear_EventType();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StreamEvent::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StreamEvent& this_ = static_cast<const StreamEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StreamEvent::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StreamEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:Whiteboard.Drawing.StreamEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 connectionId = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_connectionid() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_connectionid(), target);
    }
  }

  switch (this_.EventType_case()) {
    case kDrawingEvent: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.EventType_.drawingevent_, this_._impl_.EventType_.drawingevent_->GetCachedSize(), target,
          stream);
      break;
    }
    case kEraseEvent: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.EventType_.eraseevent_, this_._impl_.EventType_.eraseevent_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Whiteboard.Drawing.StreamEvent)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StreamEvent::ByteSizeLong(const MessageLite& base) {
  const StreamEvent& this_ = static_cast<const StreamEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StreamEvent::ByteSizeLong() const {
  const StreamEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:Whiteboard.Drawing.StreamEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int32 connectionId = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_connectionid() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_connectionid());
      }
    }
  }
  switch (this_.EventType_case()) {
    // .Whiteboard.Drawing.DrawingEvent drawingEvent = 2;
    case kDrawingEvent: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.EventType_.drawingevent_);
      break;
    }
    // .Whiteboard.Drawing.EraseEvent eraseEvent = 3;
    case kEraseEvent: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.EventType_.eraseevent_);
      break;
    }
    case EVENTTYPE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StreamEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamEvent*>(&to_msg);
  auto& from = static_cast<const StreamEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Whiteboard.Drawing.StreamEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_connectionid() != 0) {
      _this->_impl_.connectionid_ = from._impl_.connectionid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_EventType();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kDrawingEvent: {
        if (oneof_needs_init) {
          _this->_impl_.EventType_.drawingevent_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.EventType_.drawingevent_);
        } else {
          _this->_impl_.EventType_.drawingevent_->MergeFrom(*from._impl_.EventType_.drawingevent_);
        }
        break;
      }
      case kEraseEvent: {
        if (oneof_needs_init) {
          _this->_impl_.EventType_.eraseevent_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.EventType_.eraseevent_);
        } else {
          _this->_impl_.EventType_.eraseevent_->MergeFrom(*from._impl_.EventType_.eraseevent_);
        }
        break;
      }
      case EVENTTYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamEvent::CopyFrom(const StreamEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Whiteboard.Drawing.StreamEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamEvent::InternalSwap(StreamEvent* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.connectionid_, other->_impl_.connectionid_);
  swap(_impl_.EventType_, other->_impl_.EventType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata StreamEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DrawingEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DrawingEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DrawingEvent, _impl_._has_bits_);
};

void DrawingEvent::clear_drawable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.drawable_ != nullptr) _impl_.drawable_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DrawingEvent::DrawingEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DrawingEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Whiteboard.Drawing.DrawingEvent)
}
PROTOBUF_NDEBUG_INLINE DrawingEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::Whiteboard::Drawing::DrawingEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DrawingEvent::DrawingEvent(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DrawingEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DrawingEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DrawingEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.drawable_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.drawable_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:Whiteboard.Drawing.DrawingEvent)
}
PROTOBUF_NDEBUG_INLINE DrawingEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void DrawingEvent::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.drawable_ = {};
}
DrawingEvent::~DrawingEvent() {
  // @@protoc_insertion_point(destructor:Whiteboard.Drawing.DrawingEvent)
  SharedDtor(*this);
}
inline void DrawingEvent::SharedDtor(MessageLite& self) {
  DrawingEvent& this_ = static_cast<DrawingEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.drawable_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DrawingEvent::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DrawingEvent(arena);
}
constexpr auto DrawingEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DrawingEvent),
                                            alignof(DrawingEvent));
}
constexpr auto DrawingEvent::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DrawingEvent_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DrawingEvent::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DrawingEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DrawingEvent::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DrawingEvent>(), &DrawingEvent::ByteSizeLong,
              &DrawingEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DrawingEvent, _impl_._cached_size_),
          false,
      },
      &DrawingEvent::kDescriptorMethods,
      &descriptor_table_drawing_5fservice_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        DrawingEvent_class_data_ =
            DrawingEvent::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL DrawingEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DrawingEvent_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DrawingEvent_class_data_.tc_table);
  return DrawingEvent_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
DrawingEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DrawingEvent, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DrawingEvent_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Whiteboard::Drawing::DrawingEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Whiteboard.Types.Drawable drawable = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DrawingEvent, _impl_.drawable_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Whiteboard.Types.Drawable drawable = 1;
    {PROTOBUF_FIELD_OFFSET(DrawingEvent, _impl_.drawable_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::Whiteboard::Types::Drawable>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void DrawingEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Whiteboard.Drawing.DrawingEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.drawable_ != nullptr);
    _impl_.drawable_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DrawingEvent::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DrawingEvent& this_ = static_cast<const DrawingEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DrawingEvent::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DrawingEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:Whiteboard.Drawing.DrawingEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .Whiteboard.Types.Drawable drawable = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.drawable_, this_._impl_.drawable_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Whiteboard.Drawing.DrawingEvent)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DrawingEvent::ByteSizeLong(const MessageLite& base) {
  const DrawingEvent& this_ = static_cast<const DrawingEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DrawingEvent::ByteSizeLong() const {
  const DrawingEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:Whiteboard.Drawing.DrawingEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .Whiteboard.Types.Drawable drawable = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.drawable_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DrawingEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DrawingEvent*>(&to_msg);
  auto& from = static_cast<const DrawingEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Whiteboard.Drawing.DrawingEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.drawable_ != nullptr);
    if (_this->_impl_.drawable_ == nullptr) {
      _this->_impl_.drawable_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.drawable_);
    } else {
      _this->_impl_.drawable_->MergeFrom(*from._impl_.drawable_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DrawingEvent::CopyFrom(const DrawingEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Whiteboard.Drawing.DrawingEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DrawingEvent::InternalSwap(DrawingEvent* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.drawable_, other->_impl_.drawable_);
}

::google::protobuf::Metadata DrawingEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EraseEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EraseEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EraseEvent, _impl_._has_bits_);
};

void EraseEvent::clear_drawable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.drawable_ != nullptr) _impl_.drawable_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
EraseEvent::EraseEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EraseEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Whiteboard.Drawing.EraseEvent)
}
PROTOBUF_NDEBUG_INLINE EraseEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::Whiteboard::Drawing::EraseEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

EraseEvent::EraseEvent(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EraseEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EraseEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EraseEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.drawable_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.drawable_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:Whiteboard.Drawing.EraseEvent)
}
PROTOBUF_NDEBUG_INLINE EraseEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void EraseEvent::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.drawable_ = {};
}
EraseEvent::~EraseEvent() {
  // @@protoc_insertion_point(destructor:Whiteboard.Drawing.EraseEvent)
  SharedDtor(*this);
}
inline void EraseEvent::SharedDtor(MessageLite& self) {
  EraseEvent& this_ = static_cast<EraseEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.drawable_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EraseEvent::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EraseEvent(arena);
}
constexpr auto EraseEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EraseEvent),
                                            alignof(EraseEvent));
}
constexpr auto EraseEvent::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EraseEvent_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EraseEvent::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EraseEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EraseEvent::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EraseEvent>(), &EraseEvent::ByteSizeLong,
              &EraseEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EraseEvent, _impl_._cached_size_),
          false,
      },
      &EraseEvent::kDescriptorMethods,
      &descriptor_table_drawing_5fservice_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        EraseEvent_class_data_ =
            EraseEvent::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL EraseEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EraseEvent_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EraseEvent_class_data_.tc_table);
  return EraseEvent_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
EraseEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EraseEvent, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EraseEvent_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Whiteboard::Drawing::EraseEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Whiteboard.Types.Drawable drawable = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EraseEvent, _impl_.drawable_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Whiteboard.Types.Drawable drawable = 1;
    {PROTOBUF_FIELD_OFFSET(EraseEvent, _impl_.drawable_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::Whiteboard::Types::Drawable>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void EraseEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Whiteboard.Drawing.EraseEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.drawable_ != nullptr);
    _impl_.drawable_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EraseEvent::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EraseEvent& this_ = static_cast<const EraseEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EraseEvent::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EraseEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:Whiteboard.Drawing.EraseEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .Whiteboard.Types.Drawable drawable = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.drawable_, this_._impl_.drawable_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Whiteboard.Drawing.EraseEvent)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EraseEvent::ByteSizeLong(const MessageLite& base) {
  const EraseEvent& this_ = static_cast<const EraseEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EraseEvent::ByteSizeLong() const {
  const EraseEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:Whiteboard.Drawing.EraseEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .Whiteboard.Types.Drawable drawable = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.drawable_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EraseEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EraseEvent*>(&to_msg);
  auto& from = static_cast<const EraseEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Whiteboard.Drawing.EraseEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.drawable_ != nullptr);
    if (_this->_impl_.drawable_ == nullptr) {
      _this->_impl_.drawable_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.drawable_);
    } else {
      _this->_impl_.drawable_->MergeFrom(*from._impl_.drawable_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EraseEvent::CopyFrom(const EraseEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Whiteboard.Drawing.EraseEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EraseEvent::InternalSwap(EraseEvent* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.drawable_, other->_impl_.drawable_);
}

::google::protobuf::Metadata EraseEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Drawing
}  // namespace Whiteboard
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_drawing_5fservice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
